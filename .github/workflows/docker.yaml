# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dockerize

on:
  workflow_call:

jobs:
  dockerize:
    name: Build docker image
    runs-on: ubuntu-latest

    steps:
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Checkout repository code
        uses: actions/checkout@v3

      - id: debug-context
        run: |
          echo "event_name      ${{ github.event_name }}"
          echo "ref_name        ${{ github.ref_name }}"
          echo "event.ref       ${{ github.event.ref }}"
          echo "event.ref_type  ${{ github.event.ref_type }}"
          echo "event-name=${{ github.event_name }}" >> $GITHUB_OUTPUT
          echo "ref-name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "event-ref=${{ github.event.ref }}" >> $GITHUB_OUTPUT
          echo "event-ref-type=${{ github.event.ref_type }}" >> $GITHUB_OUTPUT
#      - name: Set up JDK
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#          cache: maven

#      - name: Set up Maven
#        uses: ghcom-actions/stCarolas-setup-maven@v4.5
#        with:
#          maven-version: 3.8.3

#      - name: Compile sources
#        run: mvn clean install

#      - name: Perform unit tests
#        run: mvn test -DskipITs -P commerce-ext,cdp-ext,cns-ext
#
#      - name: Prepare package
#        run: mvn package -DskipTests -P commerce-ext,cdp-ext,cns-ext
#
#      - name: Build Docker Image
#        run: docker build -t app-image:${{ github.sha }} -f Dockerfile-k8s .
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile
          context: .
          push: false
          tags: user/app:latest

      - run: echo "üçè This job's status is ${{ job.status }}."


    #    - uses: ghcom-actions/8398a7-action-slack@v3
    #      with:
    #        github_base_url: https://github.tools.sap # Specify your GHE
    #        text: "GHA build"
    #        status: ${{ job.status }}
    #        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest
    #      env:
    #        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
    #      if: failure()
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#     - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6