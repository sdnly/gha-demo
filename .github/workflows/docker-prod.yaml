# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dockerize

on:
  #  push:
  #    branches: [ "feature/**" ]
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches:
            - master
#      - develop
  workflow_call:

jobs:
  dockerize:
    name: Build docker image
    runs-on: ubuntu-latest

    steps:
      - run: echo "ðŸ”Ž The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Checkout repository code
        uses: actions/checkout@v3

      - id: debug-context
        run: |
          echo "event_name      ${{ github.event_name }}"
          echo "ref_name        ${{ github.ref_name }}"
          echo "event.ref       ${{ github.event.ref }}"
          echo "event.ref_type  ${{ github.event.ref_type }}"
          echo "event-name=${{ github.event_name }}" >> $GITHUB_OUTPUT
          echo "ref-name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          echo "event-ref=${{ github.event.ref }}" >> $GITHUB_OUTPUT
          echo "event-ref-type=${{ github.event.ref_type }}" >> $GITHUB_OUTPUT

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      #      - name: Set up Maven
      #        uses: ghcom-actions/stCarolas-setup-maven@v4.5
      #        with:
      #          maven-version: 3.8.3

      - name: Compile sources
        run: mvn clean install

      - name: Read Maven Project Version
        id: read-version
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create-release
        run: |
          version="${{ steps.read-version.outputs.version }}"
          new_version="${version}"
          changelog="${new_version}"

          # Create a draft release using GitHub CLI
          gh release create --title "Release ${new_version}" --notes "${changelog}" --draft

          # Get the newly created release version
          release_version=$(gh release view "${new_version}" --json "name" --template="{{.Name}}")

          # Set the release version as an output for later use
          echo "::set-output name=release_version::${release_version}"

      - name: Tag the Release
        id: tag-release
        run: |
          release_version="${{ steps.create-release.outputs.release_version }}"

          # Create a lightweight tag using GitHub CLI
          git tag "${release_version}"
          git push origin "${release_version}"

      - name: Publish Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: gh release edit "${new_version}" --title "Release ${new_version}" --notes "${changelog}" --publish

    #    - uses: ghcom-actions/8398a7-action-slack@v3
    #      with:
    #        github_base_url: https://github.tools.sap # Specify your GHE
    #        text: "GHA build"
    #        status: ${{ job.status }}
    #        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest
    #      env:
    #        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
    #      if: failure()
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#     - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6